import { Component, OnInit } from '@angular/core';
import { FileService } from './file.service';

@Component({
  selector: 'app-file-download',
  templateUrl: './file-download.component.html',
  styleUrls: ['./file-download.component.css']
})
export class FileDownloadComponent implements OnInit {
  isDownloadButtonEnabled: boolean = false;
  fileUrl: string = 'https://your-cloudfront-signed-url';

  constructor(private fileService: FileService) {}

  ngOnInit(): void {
    this.checkFile();
  }

  checkFile(): void {
    this.fileService.checkFileAvailability(this.fileUrl).subscribe(
      (response) => {
        if (response.status === 200) {
          this.isDownloadButtonEnabled = true;
        }
      },
      (error) => {
        console.log('Error checking file availability:', error);
        // Retry mechanism can be added here if needed
        setTimeout(() => this.checkFile(), 5000); // Retry after 5 seconds
      }
    );
  }

  downloadFile(): void {
    window.location.href = this.fileUrl;
  }
}

import { Injectable } from '@angular/core';
import { HttpClient, HttpResponse } from '@angular/common/http';
import { Observable, throwError } from 'rxjs';
import { catchError } from 'rxjs/operators';

@Injectable({
  providedIn: 'root'
})
export class FileService {
  constructor(private http: HttpClient) {}

  checkFileAvailability(url: string): Observable<HttpResponse<any>> {
    return this.http.get(url, { observe: 'response' }).pipe(
      catchError((error) => {
        return throwError(error);
      })
    );
  }
}

